---
- hosts: go-api-service
  become: true
  tasks:
    - name: Provide the UWSGI ini file for the webserver
      copy:
        src: "{{ item.src }}"
        dest: "{{ go.home }}/conf/{{ item.dest }}"
        owner: go
        group: sudo
        mode: "u=rw,g=r,o=r"
      with_items:
        - { src: "files/nginx_service.conf", dest: "nginx_service.conf" }
        - { src: "files/uwsgi_service.ini", dest: "uwsgi_service.ini" }

    - name: Create the necessary log file and directory.
      file:
        path: "{{ item.dest }}"
        owner: go
        group: sudo
        mode: "{{ item.mode }}"
        state: "{{ item.state }}"
      with_items:
        - { dest: "{{ go.logs_dir }}", mode: "u=rwx,g=rx,o=rx", state: directory }
        - { dest: "{{ go.logs_dir }}/service_uwsgi.log", mode: "u=rw,g=r,o=r", state: touch }
        - { dest: "{{ go.logs_service }}", mode: "u=rw,g=r,o=r", state: touch }

    - name: Provide the necessary go-service package.
      copy:
        src: "./go_service"
        dest: "{{ go.home }}"
        owner: go
        group: sudo
        mode: "u=rw,g=r,o=r"

    - name: Start the GO Service
      docker_container:
        name: go
        image: "go-service:latest"
        working_dir: "/app/go_service"
        hostname: go-service
        recreate: yes
        env:
          UWSGI_INI: "/app/go_service/uwsgi.ini"
          LISTEN_PORT: 80
        networks:
          - name: "{{ go_network.name }}"
        published_ports:
          - 80:80
        volumes:
          - "{{ go.logs_service }}:/app/logs/go-service.log"
          - "{{ go.home }}/go_service:/app/go_service"
          - "{{ go.home }}/conf/uwsgi_service.ini:/app/go_service/uwsgi.ini"
          - "{{ go.logs_dir }}/service_uwsgi.log:/app/logs/service_uwsgi.log"
          - "{{ go.home }}/conf/nginx_service.conf:/etc/nginx/nginx.conf"
        restart_policy: always
        state: started
